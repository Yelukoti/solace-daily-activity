3 Sample node js synchronous code


samplesync.js—>


const fs = require('fs');
try {
 // Read the content of the file synchronously
 const content = fs.readFileSync('node1.txt', 'utf-8');   //node1.txt is present in the same directory 
 console.log('File content:', content);
} catch (error) {
 console.error('An error occurred:', error.message);
}


node1.txt—>


Hello abcd!.


samplesync1.js→


function factorial(n) {
 if (n === 0 || n === 1) {
  return 1;
 } else {
  return n * factorial(n - 1);
 }
}
const number = 5;
const result = factorial(number);
console.log(`Factorial of ${number} is ${result}`);


samplesync2.js→ 


const randomNum = Math.floor(Math.random() * 10) + 1;
console.log('Random number:', randomNum);


Asynchronous code—>


sampleasyn1.js—> 


console.log('Start');
setTimeout(() => {
 console.log('Delayed message');
}, 2000);
console.log('End');


sampleasyn2.js→ 

const fs = require('fs');
console.log('Start reading file...');
fs.readFile('node1.txt', 'utf-8', (error, content) => {   //node1.txt is present in same directory
 if (error) {
  console.error('An error occurred:', error.message);
 } else {
  console.log('File content:', content);
 }
});
console.log('Continuing execution...');




sampleasyn3.js—> 


function delay(ms) {
 return new Promise((resolve) => {
  setTimeout(resolve, ms);
 });
}
console.log('Start');
delay(2000)
 .then(() => {
  console.log('Delayed message');
 });
console.log('End');




2)--> Calculator code→


function add(a, b) {
 return new Promise((resolve) => {
  resolve(a + b);
 });
}
function subtract(a, b) {
 return new Promise((resolve) => {
  resolve(a - b);
 });
}
function multiply(a, b) {
 return new Promise((resolve) => {
  resolve(a * b);
 });
}
function divide(a, b) {
 return new Promise((resolve) => {
  if (b !== 0) {
   resolve(a / b);
  } else {
   resolve('Division by zero is undefined');
  }
 });
}
function calculatePercentage(value, percentage) {
 return new Promise((resolve) => {
  const result = (value * percentage) / 100;
  resolve(result);
 });
}
async function performCalculations() {
 const num1 = 10;
 const num2 = 5;
 const additionResult = await add(num1, num2);
 console.log('Addition:', additionResult);
 const subtractionResult = await subtract(num1, num2);
 console.log('Subtraction:', subtractionResult);
 const multiplicationResult = await multiply(num1, num2);
 console.log('Multiplication:', multiplicationResult);
 const divisionResult = await divide(num1, num2);
 console.log('Division:', divisionResult);
 const percentageResult = await calculatePercentage(num1, 20);
 console.log('Percentage:', percentageResult);
}
performCalculations().catch((error) => {
 console.error('An error occurred:', error);
});
